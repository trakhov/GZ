# -*- coding: utf-8 -*-

$wd = /(.*GZ)/.match(__FILE__)[1]
Dir.glob($wd + '/helpers/*.rb') { |h| require h }

$chapter = 'alge'		# alge, calc, prob, game
$type = 'exam'			# kr, letuch, exam 
$no = 1						# comment if not needed
$disc = 'математика'
$spec = '100100.62'
$quantity = 30

$template = 'grade3(6)' 	# comment if not needed

##############################################################################

$nums = [
# # alge
		# '111', # линейные операции над матрицами
		# '112', # умножение матриц
		# '121', # определители простые 3x3
		'120', # '111' + '112' + '121'
		'123', # обратная матрица
		'131', # система уравнений 3x3
		'221', # простейшее уравнение прямой 
		'225', # площадь треугольника
		'231', # уравнение плоскости
		# '211', # 
		# '222', # точка пересечения прямых
		# '122', # определители 4x4
		# '223', # произвольная задача на уравнения прямых
		# '235', # пирамида: объемы и площади
		# '132', # система уравнений 4x4
		# '224', # система неравенств
		# '237', # произвольная задача в пространстве
# # calc
	# 1 # пределы
	# 2 # производные
	# 3 # интегралы
# # prob 
	# 1 случайные события
		# '101', # классическая вероятность (простейшее)
		# '102', # сложение/умножение вероятностей
		# '103', # геометрическая вероятность
		# '104', # формула Бернулли (простейшее)
		# '105', # полная вероятность
		# '106', # приближенные формулы
		# '107', # 
		# '108', # 
		# # -------------------
		# '1020', # сложение и умножение вероятностей
		# '1030', # задача о встрече
		# '1040', # формула Бернулли
		# '1050', # полная вероятность и формула Байеса
		# '1060', # формулы Пуассона и Муавра-Лапласа
	# 2 случайные величины
		# '200', # ряд расп дсв -> числовые характеристики
		# '201', # ф-ция расп дсв -> ряд распределения
		# '202', # ф-ция расп нсв -> плотность, вероятность, графики
		# '203', # норм расп -> вероятность, квантиль, проц. т.
		# '204', # показ расп -> параметр, вероятность, матожидание
		# '205', # нсв -> мода, медиана, матожидание
		# '206', # нсв, дсв -> начальные и центральные моменты
		# '207', # равномерная св
		# '208', # показательная св, функция надежности
		# '209', # биномиальная св
		# '210', # геометрическая св
		# '211', # неравенство Маркова
		# '212', # неравенство Чебышёва
		# '213', # 
		# '214', # 
		# '215', # 
		# # -------------------	
		# '2010', # дискретная св
		# '2020', # непрерывная св
		# '2021', # ф-ция расп или плотность нсв
		# '2030', # нормальная св	
		# '2031', # разные законы распределения
		# '2120', # закон больших чисел
	# 3 мат. статистика
		# '301', # распределение выборки -> полигон, функция расп.
		# '302', # оценки генеральных средней и дисперсии
		# # -------------------
		# '3020', # характеристики и графики распределения выборки
		# '3030', # метод моментов
		# '3040', # метод наибольшего правдоподобия
# # game
	# '101',
	# #############################
]

$template ||= $nums.length.to_s

##############################################################################


$fullname = "#{$chapter}_#{$type}" + ( $no != '' ? "_#{$no}" : '')


open(File.join($wd, 'data', $fullname + '.tex'), 'w') do |data|
	tasks = {}
	$nums.each do |story|
		gen = File.join($wd, 'stories', $chapter, story[0], story, story)		
		system "ruby #{gen}.rb"
		tasks[story] = open("#{gen}.txt") { |f| f.readlines.reverse }
	end

	tmpl = open(File.join $wd, 'templates', $type, $template) { |f| f.read }
	$quantity.times { data.write tmpl % $nums.map { |t| tasks[t].pop } }
end


open("#{$chapter}_#{$type}.tex", 'w') do |tex|
	tmpl = open(File.join $wd, 'templates', $type, 'main') { |f| f.read }
	tex.write(tmpl % {
		tex: File.join('data', $fullname),
		dzn: $no,
		disc: $disc,
		spec: $spec,
		})
end

puts "done, #{$fullname} is written"

# system "" << 
# 	"latex -output-format pdf -output-directory output #{$chapter}_#{$type};" <<
# 	"cd output;" <<
# 	""

cmd = <<eos
latex  -output-format pdf -output-directory output #{$chapter}_#{$type}

cd output
rm *.aux *.out *.log
mv #{$chapter}_#{$type}.pdf #{$fullname}.pdf
eos

system cmd