# -*- coding: utf-8 -*-

$wdir = /(.*GZ)/.match(File.expand_path $0)[1]

Dir.glob("#{$wdir}/helpers/*.rb") { |h| require h }

$chap = 'alge'			# alge, calc, prob, game
$type = 'exam'			# kr, letuch, exam 
$no = '2'							# comment if not needed
$disc = 'математика'
$spec = '80200.62'
$qnty = 30

$tml = 'grade3(6)' 	# comment if not needed

#######################################################################

$nums = [
# # alge
	# '111', # линейные операции над матрицами
	# '112', # умножение матриц
	# '121', # определители простые 3x3

	# '120', # clued 111, 112, 121
	# '123', # обратная матрица
	# '131', # система уравнений 3x3
	# '221', # простейшее уравнение прямой 
	# '225', # площадь треугольника
	# '231', # уравнение плоскости

	'222', # точка пересечения прямых
	'122', # определители 4x4
	'223', # произвольная задача на уравнения прямых
	'235', # пирамида: объемы и площади
	'132', # система уравнений 4x4
	'224', # система неравенств
	'237', # произвольная задача в пространстве
# # calc
	# 1 # пределы
	# 2 # производные
	# 3 # интегралы
# # prob 
	# '101', # классическая вероятность (простейшее)
	# '102', # сложение/умножение вероятностей
	# '1030', # задача о встрече
	# '104', # формула Бернулли (простейшее)
	# '105', # полная вероятность
	# '106', # приближенные формулы (простой вариант)
	# '200', # ряд расп дсв -> числовые характеристики
	# '2021', # ф-ция расп или плотность нсв
	# '2031', # clued 203, 207, 208, 209, 210
	# '302', # оценки генеральных средней и дисперсии
	# # -------------------
	# '103', # геометрическая вероятность
	# '107', # 
	# '108', # 
	# '1020', # сложение и умножение вероятностей
	# '1040', # формула Бернулли
	# '1050', # полная вероятность и формула Байеса
	# '1060', # формулы Пуассона и Муавра-Лапласа
	# '201', # ф-ция расп дсв -> ряд распределения
	# '202', # ф-ция расп нсв -> плотность, вероятность, графики
	# '203', # норм расп -> вероятность, квантиль, проц. т.
	# '204', # показ расп -> параметр, вероятность, матожидание
	# '205', # нсв -> мода, медиана, матожидание
	# '206', # нсв, дсв -> начальные и центральные моменты
	# '207', # равномерная св
	# '208', # показательная св, функция надежности
	# '209', # биномиальная св
	# '210', # геометрическая св
	# '211', # неравенство Маркова
	# '212', # неравенство Чебышёва
	# '213', # 
	# '214', # 
	# '215', # 
	# # -------------------	
	# '2010', # дискретная св
	# '2020', # непрерывная св
	# '2030', # нормальная св	
	# '2120', # закон больших чисел
	# '301', # распределение выборки -> полигон, функция расп.
	# # -------------------
	# '3020', # характеристики и графики распределения выборки
	# '3030', # метод моментов
	# '3040', # метод наибольшего правдоподобия
# # game
	# '101',
	# #############################
]

$tml ||= $nums.length.to_s

#######################################################################

$enc = {encoding: 'utf-8'}
$full = "#{$chap}_#{$type}" + ( $no != nil ? "_#{$no}" : '')

# open("#{$wdir}/data/#{$full}.tex", 'w') do |data|

# 	tasks = {}
# 	$nums.each do |num|
# 		dir = "#{$wdir}/stories/#{$chap}/#{num[0]}/#{num}"
# 		system "ruby #{dir}/gen_#{num}.rb"
# 		tasks[num] = open("#{dir}/out_#{num}.rb", $enc) { |f| eval f.read }
# 	end

# 	tmpl = open("#{$wdir}/templates/#{$type}/#{$tmpl}", $enc) { |f| f.read }

# 	$qnty.times do |i| 
# 		data.write tmpl % ([i+1] + $nums.map { |t| tasks[t].pop })
# 	end	
# end

$tasks = {}

$nums.each do |num|
	dir = "#{$wdir}/stories/#{$chap}/#{num[0]}/#{num}"
	system "ruby #{dir}/gen_#{num}.rb"
	$tasks[num] = open("#{dir}/out_#{num}.rb", $enc) { |f| eval f.read }
end

$tmpl = open("#{$wdir}/templates/#{$type}/#{$tml}", $enc) { |f| f.read }

$data = ''
$qnty.times do |i|
	$data += $tmpl % ([i+1] + $nums.map { |t| $tasks[t].pop })
end

open("#{$wdir}/output/#{$full}.tex", 'w') do |tex|
	tmpl = open("#{$wdir}/templates/#{$type}/main") { |f| f.read }
	tex.write(tmpl % {
		tex: $data,
		dzn: $no,
		disc: $disc,
		spec: $spec,
		})
end


print "\ndone, #{$full} is written\n"

# system "pdflatex -output-directory output #{$chap}_#{$type}"

# File.rename(
# 	File.join($wdir, 'output', "#{$chap}_#{$type}.pdf"), 
# 	File.join($wdir, 'output', "#{$full}.pdf")
# 	)

# Dir.glob(File.join $wdir, 'output/*.{aux,out,log}') { |f| File.delete f }

# print "\ndone, auxes removed\n"